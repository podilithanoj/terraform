name: Terraform CI/CD

on:
  push:
    branches:
      - dev
      - staging
  pull_request:
    branches:
      - prod

# ✅ GLOBAL ENV FOR ALL JOBS
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    outputs:
      env_name: ${{ steps.env.outputs.env_name }}

    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v3

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: 🧠 Detect Environment from Branch
        id: env
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH="${{ github.event.pull_request.base.ref }}"
          else
            BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | tr -d '\n')
          fi
          echo "env_name=$BRANCH" >> $GITHUB_OUTPUT

      - name: 📁 Terraform Init
        run: terraform init -backend-config=backends/${{ steps.env.outputs.env_name }}.backend

      - name: 📋 Terraform Plan
        run: terraform plan -var-file=envs/${{ steps.env.outputs.env_name }}.tfvars

  terraform-apply:
    name: Terraform Apply (Requires Approval)
    runs-on: ubuntu-latest
    needs: terraform-plan

    environment:
      name: ${{ needs.terraform-plan.outputs.env_name }}

    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v3

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: 📁 Terraform Init
        run: terraform init -backend-config=backends/${{ needs.terraform-plan.outputs.env_name }}.backend

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve -var-file=envs/${{ needs.terraform-plan.outputs.env_name }}.tfvars
